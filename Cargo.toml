[package]
name = "lurk"
version = "0.2.0"
authors = ["porcuquine <porcuquine@gmail.com>"]
license = "MIT OR Apache-2.0"
description = "Turing-Complete Zero Knowledge"
edition = "2021"
repository = "https://github.com/lurk-lab/lurk-rs"
rust-version = "1.68.2"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ahash = "0.7.6"
anyhow = { workspace = true }
anymap = "1.0.0-beta.2"
base32ct = { version = "0.2.0", features = ["std"] }
base64 = { workspace = true }
base-x = "0.2.11"
bellperson = { workspace = true }
bincode = { workspace = true }
blstrs = { workspace = true }
clap = { workspace = true, features = ["derive"] }
config = "0.13.3"
dashmap = "5.5.0"
ff = { workspace = true }
generic-array = "0.14.7"
hex = { version = "0.4.3", features = ["serde"] }
indexmap = { version = "1.9.3", features = ["rayon"] }
itertools = "0.9"
log = { workspace = true }
lurk-macros = { path = "lurk-macros" }
lurk-metrics = { path = "lurk-metrics" }
metrics = { workspace = true }
neptune = { workspace = true, features = ["arity2","arity4","arity8","arity16","pasta","bls"] }
nom = "7.1.3"
nom_locate = "4.1.0"
nova = { workspace = true, default-features = false }
num-bigint = "0.4.3"
num-integer = "0.1.45"
num-traits = "0.2.15"
once_cell = { workspace = true }
pairing = { workspace = true }
pasta_curves = { workspace = true, features = ["repr-c", "serde"] }
peekmore = "1.3.0"
pretty_env_logger = { workspace = true }
rand = { workspace = true }
rand_core = { version = "0.6.4", default-features = false }
rand_xorshift = "0.3.0"
rayon = "1.7.0"
rustyline-derive = "0.8.0"
serde = { workspace = true, features = ["derive"] }
serde_bytes = "0.11.12"
serde_json = { workspace = true }
serde_repr = "0.1.14"
tap = "1.0.1"
stable_deref_trait = "1.2.0"
thiserror = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
memmap = { version = "0.5.10", package = "memmap2" }
pasta-msm = "0.1.4"
proptest = { workspace = true }
proptest-derive = { workspace = true }
rand = "0.8.5"
rustyline = { version = "11.0", features = ["derive", "with-file-history"], default-features = false }
home = "0.5.5"

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
rustyline = { version = "11.0", features = ["derive"], default-features = false }

[features]
default = []
opencl = ["neptune/opencl"]
cuda = ["neptune/cuda"]
# compile without ISA extensions
portable = ["blstrs/portable", "pasta-msm/portable"]
flamegraph = ["pprof/flamegraph", "pprof/criterion"]

[dev-dependencies]
assert_cmd = "2.0.12"
cfg-if = "1.0.0"
criterion = "0.4"
hex = "0.4.3"
pprof = { version = "0.11" }
sha2 = { version = "0.10.7" }
structopt = { version = "0.3", default-features = false }
tap = "1.0.1"
tempfile = "3.6.0"

[workspace]
resolver = "2"
members = [
    "clutch",
    "fcomm", 
    "lurk-macros",
    "lurk-metrics"
]

# Dependencies that should be kept in sync through the whole workspace
[workspace.dependencies]
anyhow = "1.0.72"
base64 = "0.13.1"
bellperson = "0.25"
bincode = "1.3.3"
blstrs = "0.7.0"
clap = "4.3.17"
ff = "0.13"
log = "0.4.19"
metrics = "0.21.1"
neptune = { version = "10.0.0" }
nova = { version = "0.23", default-features = false, package = "nova-snark" }
once_cell = "1.18.0"
pairing = { version = "0.23" }
pasta_curves = { version = "0.5.1" }
pasta-msm = "0.1.4"
pretty_env_logger = "0.4"
proptest = "1.2.0"
proptest-derive = "0.3.0"
rand = "0.8"
serde = "1.0"
serde_json = { version = "1.0" }
thiserror = "1.0.43"

[[bin]]
name = "lurk"
path = "src/main.rs"

[profile.dev-ci]
inherits = "dev"
# By compiling dependencies with optimizations, performing tests gets much faster.
opt-level = 3
lto = "thin"
incremental = false
codegen-units = 16

[profile.dev-no-assertions]
# Some tests in the case gadget depend on debug assertions
# being off (they test release behavior in case of duplicate clauses).
inherits = "dev-ci"
debug-assertions = false

[[bench]]
name = "end2end"
harness = false

[[bench]]
name = "fibonacci"
harness = false

[[bench]]
name = "synthesis"
harness = false

[[bench]]
name = "public_params"
harness = false

[patch.crates-io]
sppark = { git = "https://github.com/supranational/sppark", rev="5fea26f43cc5d12a77776c70815e7c722fd1f8a7" }
