(function() {var implementors = {
"lurk":[["impl&lt;'a, F, C&gt; NonUniformCircuit&lt;&lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.E1\" title=\"type lurk::proof::nova::CurveCycleEquipped::E1\">E1</a>, &lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.E2\" title=\"type lurk::proof::nova::CurveCycleEquipped::E2\">E2</a>, <a class=\"struct\" href=\"lurk/lem/multiframe/struct.MultiFrame.html\" title=\"struct lurk::lem::multiframe::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;, TrivialSecondaryCircuit&lt;&lt;&lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.E2\" title=\"type lurk::proof::nova::CurveCycleEquipped::E2\">E2</a> as Engine&gt;::Scalar&gt;&gt; for <a class=\"struct\" href=\"lurk/lem/multiframe/struct.MultiFrame.html\" title=\"struct lurk::lem::multiframe::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,\n    C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt; + 'a,\n    &lt;&lt;<a class=\"type\" href=\"lurk/proof/nova/type.E1.html\" title=\"type lurk::proof::nova::E1\">E1</a>&lt;F&gt; as Engine&gt;::Scalar as PrimeField&gt;::Repr: Abomonation,\n    &lt;&lt;<a class=\"type\" href=\"lurk/proof/nova/type.E2.html\" title=\"type lurk::proof::nova::E2\">E2</a>&lt;F&gt; as Engine&gt;::Scalar as PrimeField&gt;::Repr: Abomonation,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()