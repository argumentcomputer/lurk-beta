(function() {var type_impls = {
"lurk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-Clone-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-Debug-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-PartialEq-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<section id=\"impl-StructuralPartialEq-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-StructuralPartialEq-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section>","StructuralPartialEq","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<section id=\"impl-Copy-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-Copy-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section>","Copy","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<section id=\"impl-Eq-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-Eq-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section>","Eq","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContentAddressed%3CF%3E-for-Stub%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#76-88\">source</a><a href=\"#impl-ContentAddressed%3CF%3E-for-Stub%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/hash_witness/trait.ContentAddressed.html\" title=\"trait lurk::hash_witness::ContentAddressed\">ContentAddressed</a>&lt;F, ScalarPtrRepr = T&gt;, T: <a class=\"trait\" href=\"lurk/hash_witness/trait.CAddr.html\" title=\"trait lurk::hash_witness::CAddr\">CAddr</a>&lt;F&gt;&gt; <a class=\"trait\" href=\"lurk/hash_witness/trait.ContentAddressed.html\" title=\"trait lurk::hash_witness::ContentAddressed\">ContentAddressed</a>&lt;F&gt; for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;C&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ScalarPtrRepr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ScalarPtrRepr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"lurk/hash_witness/trait.ContentAddressed.html#associatedtype.ScalarPtrRepr\" class=\"associatedtype\">ScalarPtrRepr</a> = T</h4></section><section id=\"method.to_scalar_ptr_repr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#81-87\">source</a><a href=\"#method.to_scalar_ptr_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lurk/hash_witness/trait.ContentAddressed.html#tymethod.to_scalar_ptr_repr\" class=\"fn\">to_scalar_ptr_repr</a>(&amp;self, s: &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"lurk/hash_witness/trait.ContentAddressed.html#associatedtype.ScalarPtrRepr\" title=\"type lurk::hash_witness::ContentAddressed::ScalarPtrRepr\">ScalarPtrRepr</a>&gt;</h4></section><section id=\"method.preimage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#41-45\">source</a><a href=\"#method.preimage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lurk/hash_witness/trait.ContentAddressed.html#method.preimage\" class=\"fn\">preimage</a>(&amp;self, s: &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"type\" href=\"lurk/hash_witness/type.Preimage.html\" title=\"type lurk::hash_witness::Preimage\">Preimage</a>&lt;F&gt;&gt;</h4></section><section id=\"method.to_dummy_scalar_ptr_repr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#47-49\">source</a><a href=\"#method.to_dummy_scalar_ptr_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"lurk/hash_witness/trait.ContentAddressed.html#method.to_dummy_scalar_ptr_repr\" class=\"fn\">to_dummy_scalar_ptr_repr</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"lurk/hash_witness/trait.ContentAddressed.html#associatedtype.ScalarPtrRepr\" title=\"type lurk::hash_witness::ContentAddressed::ScalarPtrRepr\">ScalarPtrRepr</a>&gt;</h4></section></div></details>","ContentAddressed<F>","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"],["<section id=\"impl-StructuralEq-for-Stub%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/hash_witness.rs.html#22\">source</a><a href=\"#impl-StructuralEq-for-Stub%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"lurk/hash_witness/enum.Stub.html\" title=\"enum lurk::hash_witness::Stub\">Stub</a>&lt;T&gt;</h3></section>","StructuralEq","lurk::hash_witness::ConsStub","lurk::hash_witness::ContStub"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()