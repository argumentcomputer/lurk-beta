(function() {var type_impls = {
"lurk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#302-706\">source</a><a href=\"#impl-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.blank\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#303-319\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.blank\" class=\"fn\">blank</a>(folding_config: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"enum\" href=\"lurk/proof/supernova/enum.FoldingConfig.html\" title=\"enum lurk::proof::supernova::FoldingConfig\">FoldingConfig</a>&lt;F, C&gt;&gt;, meta: <a class=\"enum\" href=\"lurk/eval/enum.Meta.html\" title=\"enum lurk::eval::Meta\">Meta</a>&lt;F&gt;) -&gt; Self</h4></section><section id=\"method.get_store\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#321-323\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.get_store\" class=\"fn\">get_store</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;</h4></section><section id=\"method.from_frames\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#325-335\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.from_frames\" class=\"fn\">from_frames</a>(\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    frames: &amp;[<a class=\"struct\" href=\"lurk/eval/struct.Frame.html\" title=\"struct lurk::eval::Frame\">Frame</a>&lt;<a class=\"struct\" href=\"lurk/eval/struct.IO.html\" title=\"struct lurk::eval::IO\">IO</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/eval/struct.Witness.html\" title=\"struct lurk::eval::Witness\">Witness</a>&lt;F&gt;, F, C&gt;],\n    store: &amp;'a <a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;,\n    folding_config: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"enum\" href=\"lurk/proof/supernova/enum.FoldingConfig.html\" title=\"enum lurk::proof::supernova::FoldingConfig\">FoldingConfig</a>&lt;F, C&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self&gt;</h4></section><section id=\"method.synthesize_frames\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#474-505\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.synthesize_frames\" class=\"fn\">synthesize_frames</a>&lt;CS: ConstraintSystem&lt;F&gt;&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    store: &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;,\n    input_expr: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_env: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_cont: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;,\n    frames: &amp;[<a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.CircuitFrame.html\" title=\"struct lurk::circuit::circuit_frame::CircuitFrame\">CircuitFrame</a>&lt;'_, F, C&gt;],\n    g: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/data/struct.GlobalAllocations.html\" title=\"struct lurk::circuit::gadgets::data::GlobalAllocations\">GlobalAllocations</a>&lt;F&gt;\n) -&gt; (<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;)</h4></section><section id=\"method.synthesize_frames_sequential\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#507-590\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.synthesize_frames_sequential\" class=\"fn\">synthesize_frames_sequential</a>&lt;CS: ConstraintSystem&lt;F&gt;&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    store: &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;,\n    input_expr: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_env: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_cont: <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;,\n    frames: &amp;[<a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.CircuitFrame.html\" title=\"struct lurk::circuit::circuit_frame::CircuitFrame\">CircuitFrame</a>&lt;'_, F, C&gt;],\n    cons_and_cont_witnesses: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"type\" href=\"lurk/hash_witness/type.ConsCircuitWitness.html\" title=\"type lurk::hash_witness::ConsCircuitWitness\">ConsCircuitWitness</a>&lt;F&gt;, <a class=\"type\" href=\"lurk/hash_witness/type.ContCircuitWitness.html\" title=\"type lurk::hash_witness::ContCircuitWitness\">ContCircuitWitness</a>&lt;F&gt;)&gt;&gt;,\n    g: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/data/struct.GlobalAllocations.html\" title=\"struct lurk::circuit::gadgets::data::GlobalAllocations\">GlobalAllocations</a>&lt;F&gt;\n) -&gt; (<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;)</h4></section><section id=\"method.synthesize_frames_parallel\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#592-705\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.synthesize_frames_parallel\" class=\"fn\">synthesize_frames_parallel</a>&lt;CS: ConstraintSystem&lt;F&gt;&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    store: &amp;<a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;,\n    input_expr: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_env: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;,\n    input_cont: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;,\n    frames: &amp;[<a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.CircuitFrame.html\" title=\"struct lurk::circuit::circuit_frame::CircuitFrame\">CircuitFrame</a>&lt;'_, F, C&gt;],\n    g: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/data/struct.GlobalAllocations.html\" title=\"struct lurk::circuit::gadgets::data::GlobalAllocations\">GlobalAllocations</a>&lt;F&gt;\n) -&gt; (<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;)</h4></section></div></details>",0,"lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiFrame%3C'_,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#714-718\">source</a><a href=\"#impl-MultiFrame%3C'_,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'_, F, C&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.precedes\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#715-717\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.precedes\" class=\"fn\">precedes</a>(&amp;self, maybe_next: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#360-370\">source</a><a href=\"#impl-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.circuit_index\" class=\"method\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#362-369\">source</a><h4 class=\"code-header\">pub fn <a href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html#tymethod.circuit_index\" class=\"fn\">circuit_index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the circuit index assigned to this <code>MultiFrame</code>โs inner computation, as labeled by its <code>Meta</code>, and determined by its <code>FoldingConfig</code>.</p>\n</div></details></div></details>",0,"lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Provable%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#720-750\">source</a><a href=\"#impl-Provable%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"trait\" href=\"lurk/proof/trait.Provable.html\" title=\"trait lurk::proof::Provable\">Provable</a>&lt;F&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'_, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.public_inputs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#725-740\">source</a><a href=\"#method.public_inputs\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.Provable.html#tymethod.public_inputs\" class=\"fn\">public_inputs</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;</h4></section></summary><div class='docblock'>Returns the public inputs of the provable structure.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.public_input_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#742-745\">source</a><a href=\"#method.public_input_size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.Provable.html#tymethod.public_input_size\" class=\"fn\">public_input_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the size of the public inputs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduction_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#747-749\">source</a><a href=\"#method.reduction_count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.Provable.html#tymethod.reduction_count\" class=\"fn\">reduction_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of reductions in the provable structure.</div></details></div></details>","Provable<F>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#64\">source</a><a href=\"#impl-Debug-for-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#64\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StepCircuit%3CF%3E-for-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/proof/nova.rs.html#506-625\">source</a><a href=\"#impl-StepCircuit%3CF%3E-for-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; StepCircuit&lt;F&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/nova.rs.html#507-509\">source</a><a href=\"#method.arity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">arity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the the number of inputs or outputs of each step\n(this method is called only at circuit synthesis time)\n<code>synthesize</code> and <code>output</code> methods are expected to take as\ninput a vector of size equal to arity and output a vector of size equal to arity</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.synthesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/nova.rs.html#511\">source</a><a href=\"#method.synthesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">synthesize</a>&lt;CS&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    z: &amp;[AllocatedNum&lt;F&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;AllocatedNum&lt;F&gt;&gt;, SynthesisError&gt;<span class=\"where fmt-newline\">where\n    CS: ConstraintSystem&lt;F&gt;,</span></h4></section></summary><div class='docblock'>Sythesize the circuit for a computation step and return variable\nthat corresponds to the output of the step <code>z_{i+1}</code></div></details></div></details>","StepCircuit<F>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonUniformCircuit%3C%3CF+as+CurveCycleEquipped%3E::G1,+%3CF+as+CurveCycleEquipped%3E::G2,+MultiFrame%3C'a,+F,+C1%3E,+TrivialSecondaryCircuit%3C%3C%3CF+as+CurveCycleEquipped%3E::G2+as+Group%3E::Scalar%3E%3E-for-MultiFrame%3C'a,+F,+C1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#419-462\">source</a><a href=\"#impl-NonUniformCircuit%3C%3CF+as+CurveCycleEquipped%3E::G1,+%3CF+as+CurveCycleEquipped%3E::G2,+MultiFrame%3C'a,+F,+C1%3E,+TrivialSecondaryCircuit%3C%3C%3CF+as+CurveCycleEquipped%3E::G2+as+Group%3E::Scalar%3E%3E-for-MultiFrame%3C'a,+F,+C1%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F, C1&gt; NonUniformCircuit&lt;&lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.G1\" title=\"type lurk::proof::nova::CurveCycleEquipped::G1\">G1</a>, &lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.G2\" title=\"type lurk::proof::nova::CurveCycleEquipped::G2\">G2</a>, <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C1&gt;, TrivialSecondaryCircuit&lt;&lt;&lt;F as <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a>&gt;::<a class=\"associatedtype\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html#associatedtype.G2\" title=\"type lurk::proof::nova::CurveCycleEquipped::G2\">G2</a> as Group&gt;::Scalar&gt;&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C1&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"lurk/proof/nova/trait.CurveCycleEquipped.html\" title=\"trait lurk::proof::nova::CurveCycleEquipped\">CurveCycleEquipped</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,\n    C1: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;,\n    &lt;&lt;<a class=\"type\" href=\"lurk/proof/nova/type.G1.html\" title=\"type lurk::proof::nova::G1\">G1</a>&lt;F&gt; as Group&gt;::Scalar as PrimeField&gt;::Repr: Abomonation,\n    &lt;&lt;<a class=\"type\" href=\"lurk/proof/nova/type.G2.html\" title=\"type lurk::proof::nova::G2\">G2</a>&lt;F&gt; as Group&gt;::Scalar as PrimeField&gt;::Repr: Abomonation,</span></h3></section></summary><div class=\"docblock\"><p>All steps of an NIVC computation</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.num_circuits\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#427-430\">source</a><a href=\"#method.num_circuits\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">num_circuits</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>How many circuits are provided?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.primary_circuit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#432-457\">source</a><a href=\"#method.primary_circuit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">primary_circuit</a>(&amp;self, circuit_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Return a new instance of the primary circuit at <code>index</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.secondary_circuit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#459-461\">source</a><a href=\"#method.secondary_circuit\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">secondary_circuit</a>(&amp;self) -&gt; <a class=\"type\" href=\"lurk/proof/supernova/type.C2.html\" title=\"type lurk::proof::supernova::C2\">C2</a>&lt;F&gt;</h4></section></summary><div class='docblock'>Return a new instance of the secondary circuit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initial_circuit_index\" class=\"method trait-impl\"><a href=\"#method.initial_circuit_index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">initial_circuit_index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Initial circuit index, defaults to zero.</div></details></div></details>","NonUniformCircuit<<F as CurveCycleEquipped>::G1, <F as CurveCycleEquipped>::G2, MultiFrame<'a, F, C1>, TrivialSecondaryCircuit<<<F as CurveCycleEquipped>::G2 as Group>::Scalar>>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Circuit%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#824-909\">source</a><a href=\"#impl-Circuit%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; Circuit&lt;F&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'_, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.synthesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#825\">source</a><a href=\"#method.synthesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">synthesize</a>&lt;CS: ConstraintSystem&lt;F&gt;&gt;(\n    self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, SynthesisError&gt;</h4></section></summary><div class='docblock'>Synthesize the circuit into a rank-1 quadratic constraint system.</div></details></div></details>","Circuit<F>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StepCircuit%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#374-416\">source</a><a href=\"#impl-StepCircuit%3CF%3E-for-MultiFrame%3C'_,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; StepCircuit&lt;F&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'_, F, C&gt;</h3></section></summary><div class=\"docblock\"><p>Implement <code>supernova::StepCircuit</code> for <code>MultiFrame</code>. This is the universal Lurk circuit that will be included as the\nfirst circuit (index 0) of every Lurk NIVC circuit set.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#375-377\">source</a><a href=\"#method.arity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">arity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the the number of inputs or outputs of each step\n(this method is called only at circuit synthesis time)\n<code>synthesize</code> and <code>output</code> methods are expected to take as\ninput a vector of size equal to arity and output a vector of size equal to arity</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.circuit_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#379-381\">source</a><a href=\"#method.circuit_index\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">circuit_index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return this <code>StepCircuit</code>โs assigned index, for use when enforcing the program counter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.synthesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/proof/supernova.rs.html#383-415\">source</a><a href=\"#method.synthesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">synthesize</a>&lt;CS&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    pc: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;AllocatedNum&lt;F&gt;&gt;,\n    z: &amp;[AllocatedNum&lt;F&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;AllocatedNum&lt;F&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;AllocatedNum&lt;F&gt;&gt;), SynthesisError&gt;<span class=\"where fmt-newline\">where\n    CS: ConstraintSystem&lt;F&gt;,</span></h4></section></summary><div class='docblock'>Sythesize the circuit for a computation step and return variable\nthat corresponds to the output of the step <code>pc_{i+1}</code> and <code>z_{i+1}</code></div></details></div></details>","StepCircuit<F>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiFrameTrait%3C'a,+F,+C%3E-for-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#139-278\">source</a><a href=\"#impl-MultiFrameTrait%3C'a,+F,+C%3E-for-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt; + 'a&gt; <a class=\"trait\" href=\"lurk/proof/trait.MultiFrameTrait.html\" title=\"trait lurk::proof::MultiFrameTrait\">MultiFrameTrait</a>&lt;'a, F, C&gt; for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.make_dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#265-273\">source</a><a href=\"#method.make_dummy\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.make_dummy\" class=\"fn\">make_dummy</a>(\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    circuit_frame: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.CircuitFrame.html\" title=\"struct lurk::circuit::circuit_frame::CircuitFrame\">CircuitFrame</a>&lt;'a, F, C&gt;&gt;,\n    store: &amp;'a Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>,\n    folding_config: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"enum\" href=\"lurk/proof/supernova/enum.FoldingConfig.html\" title=\"enum lurk::proof::supernova::FoldingConfig\">FoldingConfig</a>&lt;F, C&gt;&gt;,\n    meta: <a class=\"enum\" href=\"lurk/eval/enum.Meta.html\" title=\"enum lurk::eval::Meta\">Meta</a>&lt;F&gt;\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Make a dummy <code>MultiFrame</code>, duplicating <code>self</code>โs final <code>CircuitFrame</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Ptr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Ptr\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Ptr\" class=\"associatedtype\">Ptr</a> = <a class=\"struct\" href=\"lurk/ptr/struct.GPtr.html\" title=\"struct lurk::ptr::GPtr\">GPtr</a>&lt;F, <a class=\"enum\" href=\"lurk/tag/enum.ExprTag.html\" title=\"enum lurk::tag::ExprTag\">ExprTag</a>&gt;</h4></section></summary><div class='docblock'>The associated <code>Ptr</code> type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ContPtr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ContPtr\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.ContPtr\" class=\"associatedtype\">ContPtr</a> = <a class=\"struct\" href=\"lurk/ptr/struct.GPtr.html\" title=\"struct lurk::ptr::GPtr\">GPtr</a>&lt;F, <a class=\"enum\" href=\"lurk/tag/enum.ContTag.html\" title=\"enum lurk::tag::ContTag\">ContTag</a>&gt;</h4></section></summary><div class='docblock'>The associated <code>ContPtr</code> type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Store\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Store\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" class=\"associatedtype\">Store</a> = <a class=\"struct\" href=\"lurk/store/struct.Store.html\" title=\"struct lurk::store::Store\">Store</a>&lt;F&gt;</h4></section></summary><div class='docblock'>The associated <code>Store</code> type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.StoreError\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.StoreError\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.StoreError\" class=\"associatedtype\">StoreError</a> = <a class=\"struct\" href=\"lurk/store/struct.Error.html\" title=\"struct lurk::store::Error\">Error</a></h4></section></summary><div class='docblock'>The error type for the Store type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.EvalFrame\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EvalFrame\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" class=\"associatedtype\">EvalFrame</a> = <a class=\"struct\" href=\"lurk/eval/struct.Frame.html\" title=\"struct lurk::eval::Frame\">Frame</a>&lt;<a class=\"struct\" href=\"lurk/eval/struct.IO.html\" title=\"struct lurk::eval::IO\">IO</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/eval/struct.Witness.html\" title=\"struct lurk::eval::Witness\">Witness</a>&lt;F&gt;, F, C&gt;</h4></section></summary><div class='docblock'>The associated <code>Frame</code> type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.CircuitFrame\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CircuitFrame\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.CircuitFrame\" class=\"associatedtype\">CircuitFrame</a> = <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.CircuitFrame.html\" title=\"struct lurk::circuit::circuit_frame::CircuitFrame\">CircuitFrame</a>&lt;'a, F, C&gt;</h4></section></summary><div class='docblock'>The associated <code>CircuitFrame</code> type</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.GlobalAllocation\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.GlobalAllocation\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.GlobalAllocation\" class=\"associatedtype\">GlobalAllocation</a> = <a class=\"struct\" href=\"lurk/circuit/gadgets/data/struct.GlobalAllocations.html\" title=\"struct lurk::circuit::gadgets::data::GlobalAllocations\">GlobalAllocations</a>&lt;F&gt;</h4></section></summary><div class='docblock'>The associated type which manages global allocations</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AllocatedIO\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AllocatedIO\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.AllocatedIO\" class=\"associatedtype\">AllocatedIO</a> = (<a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedPtr\">AllocatedPtr</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/circuit/gadgets/pointer/struct.AllocatedContPtr.html\" title=\"struct lurk::circuit::gadgets::pointer::AllocatedContPtr\">AllocatedContPtr</a>&lt;F&gt;)</h4></section></summary><div class='docblock'>The associated type of allocated input and output to the circuit</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.emitted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#149-154\">source</a><a href=\"#method.emitted\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.emitted\" class=\"fn\">emitted</a>(store: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>, eval_frame: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" title=\"type lurk::proof::MultiFrameTrait::EvalFrame\">EvalFrame</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"lurk/ptr/type.Ptr.html\" title=\"type lurk::ptr::Ptr\">Ptr</a>&lt;F&gt;&gt;</h4></section></summary><div class='docblock'>the emitted frames</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_evaluation_frames\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#156-176\">source</a><a href=\"#method.get_evaluation_frames\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.get_evaluation_frames\" class=\"fn\">get_evaluation_frames</a>(\n    padding_predicate: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    expr: <a class=\"type\" href=\"lurk/ptr/type.Ptr.html\" title=\"type lurk::ptr::Ptr\">Ptr</a>&lt;F&gt;,\n    env: <a class=\"type\" href=\"lurk/ptr/type.Ptr.html\" title=\"type lurk::ptr::Ptr\">Ptr</a>&lt;F&gt;,\n    store: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>,\n    limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    lang: &amp;<a class=\"struct\" href=\"lurk/eval/lang/struct.Lang.html\" title=\"struct lurk::eval::lang::Lang\">Lang</a>&lt;F, C&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"lurk/eval/struct.Frame.html\" title=\"struct lurk::eval::Frame\">Frame</a>&lt;<a class=\"struct\" href=\"lurk/eval/struct.IO.html\" title=\"struct lurk::eval::IO\">IO</a>&lt;F&gt;, <a class=\"struct\" href=\"lurk/eval/struct.Witness.html\" title=\"struct lurk::eval::Witness\">Witness</a>&lt;F&gt;, F, C&gt;&gt;, <a class=\"enum\" href=\"lurk/error/enum.ProofError.html\" title=\"enum lurk::error::ProofError\">ProofError</a>&gt;</h4></section></summary><div class='docblock'>Evaluates and generates the frames of the computation given the expression, environment, and store (IVC only, TODO NIVC)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.io_to_scalar_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#178-183\">source</a><a href=\"#method.io_to_scalar_vector\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.io_to_scalar_vector\" class=\"fn\">io_to_scalar_vector</a>(\n    store: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>,\n    io: &amp;&lt;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" title=\"type lurk::proof::MultiFrameTrait::EvalFrame\">EvalFrame</a> as <a class=\"trait\" href=\"lurk/proof/trait.FrameLike.html\" title=\"trait lurk::proof::FrameLike\">FrameLike</a>&lt;<a class=\"type\" href=\"lurk/ptr/type.Ptr.html\" title=\"type lurk::ptr::Ptr\">Ptr</a>&lt;F&gt;, <a class=\"type\" href=\"lurk/ptr/type.ContPtr.html\" title=\"type lurk::ptr::ContPtr\">ContPtr</a>&lt;F&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"lurk/proof/trait.FrameLike.html#associatedtype.FrameIO\" title=\"type lurk::proof::FrameLike::FrameIO\">FrameIO</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;</h4></section></summary><div class='docblock'>Returns a public IO vector when equipped with the local store, and the Self::Frameโs IO</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compute_witness\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#185-212\">source</a><a href=\"#method.compute_witness\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.compute_witness\" class=\"fn\">compute_witness</a>(&amp;self, s: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>) -&gt; WitnessCS&lt;F&gt;</h4></section></summary><div class='docblock'>Populates a WitnessCS with the witness values for the given store.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cached_witness\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#214-216\">source</a><a href=\"#method.cached_witness\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.cached_witness\" class=\"fn\">cached_witness</a>(&amp;mut self) -&gt; &amp;mut <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;WitnessCS&lt;F&gt;&gt;</h4></section></summary><div class='docblock'>Returns a reference to the cached witness values</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.output\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#218-220\">source</a><a href=\"#method.output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.output\" class=\"fn\">output</a>(\n    &amp;self\n) -&gt; &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" title=\"type lurk::proof::MultiFrameTrait::EvalFrame\">EvalFrame</a> as <a class=\"trait\" href=\"lurk/proof/trait.FrameLike.html\" title=\"trait lurk::proof::FrameLike\">FrameLike</a>&lt;<a class=\"type\" href=\"lurk/ptr/type.Ptr.html\" title=\"type lurk::ptr::Ptr\">Ptr</a>&lt;F&gt;, <a class=\"type\" href=\"lurk/ptr/type.ContPtr.html\" title=\"type lurk::ptr::ContPtr\">ContPtr</a>&lt;F&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"lurk/proof/trait.FrameLike.html#associatedtype.FrameIO\" title=\"type lurk::proof::FrameLike::FrameIO\">FrameIO</a>&gt;</h4></section></summary><div class='docblock'>The output of the last frame</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.frames\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#222-224\">source</a><a href=\"#method.frames\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.frames\" class=\"fn\">frames</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.CircuitFrame\" title=\"type lurk::proof::MultiFrameTrait::CircuitFrame\">CircuitFrame</a>&gt;&gt;</h4></section></summary><div class='docblock'>Iterates through the Self::CircuitFrame instances</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.precedes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#226-228\">source</a><a href=\"#method.precedes\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.precedes\" class=\"fn\">precedes</a>(&amp;self, maybe_next: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if the supplied instance directly precedes this one in a sequential computation trace.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.synthesize_frames\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#230-249\">source</a><a href=\"#method.synthesize_frames\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.synthesize_frames\" class=\"fn\">synthesize_frames</a>&lt;CS: ConstraintSystem&lt;F&gt;&gt;(\n    &amp;self,\n    cs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut CS</a>,\n    store: &amp;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>,\n    input: Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.AllocatedIO\" title=\"type lurk::proof::MultiFrameTrait::AllocatedIO\">AllocatedIO</a>,\n    frames: &amp;[Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.CircuitFrame\" title=\"type lurk::proof::MultiFrameTrait::CircuitFrame\">CircuitFrame</a>],\n    g: &amp;<a class=\"struct\" href=\"lurk/circuit/gadgets/data/struct.GlobalAllocations.html\" title=\"struct lurk::circuit::gadgets::data::GlobalAllocations\">GlobalAllocations</a>&lt;F&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.AllocatedIO\" title=\"type lurk::proof::MultiFrameTrait::AllocatedIO\">AllocatedIO</a>, SynthesisError&gt;</h4></section></summary><div class='docblock'>Synthesize some frames.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blank\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#251-253\">source</a><a href=\"#method.blank\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.blank\" class=\"fn\">blank</a>(\n    folding_config: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"enum\" href=\"lurk/proof/supernova/enum.FoldingConfig.html\" title=\"enum lurk::proof::supernova::FoldingConfig\">FoldingConfig</a>&lt;F, C&gt;&gt;,\n    meta: <a class=\"enum\" href=\"lurk/eval/enum.Meta.html\" title=\"enum lurk::eval::Meta\">Meta</a>&lt;F&gt;,\n    _pc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; Self</h4></section></summary><div class='docblock'>Synthesize a blank circuit.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_frames\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#255-262\">source</a><a href=\"#method.from_frames\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.from_frames\" class=\"fn\">from_frames</a>(\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    frames: &amp;[Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" title=\"type lurk::proof::MultiFrameTrait::EvalFrame\">EvalFrame</a>],\n    store: &amp;'a Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.Store\" title=\"type lurk::proof::MultiFrameTrait::Store\">Store</a>,\n    folding_config: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"enum\" href=\"lurk/proof/supernova/enum.FoldingConfig.html\" title=\"enum lurk::proof::supernova::FoldingConfig\">FoldingConfig</a>&lt;F, C&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Create an instance from some <code>Self::Frame</code>s.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.significant_frame_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#275-277\">source</a><a href=\"#method.significant_frame_count\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"lurk/proof/trait.MultiFrameTrait.html#tymethod.significant_frame_count\" class=\"fn\">significant_frame_count</a>(frames: &amp;[Self::<a class=\"associatedtype\" href=\"lurk/proof/trait.MultiFrameTrait.html#associatedtype.EvalFrame\" title=\"type lurk::proof::MultiFrameTrait::EvalFrame\">EvalFrame</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Counting the number of non-trivial frames in the evaluation</div></details></div></details>","MultiFrameTrait<'a, F, C>","lurk::proof::nova::C1Lurk"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-MultiFrame%3C'a,+F,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#64\">source</a><a href=\"#impl-Clone-for-MultiFrame%3C'a,+F,+C%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;F&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lurk/circuit/circuit_frame.rs.html#64\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"lurk/circuit/circuit_frame/struct.MultiFrame.html\" title=\"struct lurk::circuit::circuit_frame::MultiFrame\">MultiFrame</a>&lt;'a, F, C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","lurk::proof::nova::C1Lurk"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()