(function() {var implementors = {
"lurk":[["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/scalar_store/struct.ScalarStore.html\" title=\"struct lurk::scalar_store::ScalarStore\">ScalarStore</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;'a, F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Proof.html\" title=\"struct lurk::public_parameters::Proof\">Proof</a>&lt;'a, F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;'a, C&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/proof/nova/struct.PublicParams.html\" title=\"struct lurk::proof::nova::PublicParams\">PublicParams</a>&lt;'a, C&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;<a class=\"type\" href=\"lurk/proof/nova/type.S1.html\" title=\"type lurk::proof::nova::S1\">S1</a>&gt;,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.LurkScalarIpld.html\" title=\"struct lurk::public_parameters::LurkScalarIpld\">LurkScalarIpld</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Evaluation.html\" title=\"struct lurk::public_parameters::Evaluation\">Evaluation</a>"],["impl&lt;E: <a class=\"trait\" href=\"lurk/tag/trait.Tag.html\" title=\"trait lurk::tag::Tag\">Tag</a>, F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/ptr/struct.SPtr.html\" title=\"struct lurk::ptr::SPtr\">SPtr</a>&lt;E, F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/eval/lang/enum.Coproc.html\" title=\"enum lurk::eval::lang::Coproc\">Coproc</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;E: Engine + MultiMillerLoop&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/proof/groth16/struct.Proof.html\" title=\"struct lurk::proof::groth16::Proof\">Proof</a>&lt;E&gt;<span class=\"where fmt-newline\">where\n    &lt;E as Engine&gt;::Gt: Compress + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    &lt;E as Engine&gt;::G1: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    &lt;E as Engine&gt;::G1Affine: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    &lt;E as Engine&gt;::G2Affine: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    &lt;E as Engine&gt;::Fr: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,\n    AggregateProofAndInstance&lt;E&gt;: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Expression.html\" title=\"struct lurk::public_parameters::Expression\">Expression</a>"],["impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/enum.Num.html\" title=\"enum lurk::Num\">Num</a>&lt;F&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/public_parameters/enum.LurkPtr.html\" title=\"enum lurk::public_parameters::LurkPtr\">LurkPtr</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/tag/enum.Op2.html\" title=\"enum lurk::tag::Op2\">Op2</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/sym/struct.Symbol.html\" title=\"struct lurk::sym::Symbol\">Symbol</a>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/scalar_store/enum.ScalarExpression.html\" title=\"enum lurk::scalar_store::ScalarExpression\">ScalarExpression</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/tag/enum.ExprTag.html\" title=\"enum lurk::tag::ExprTag\">ExprTag</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.PtrEvaluation.html\" title=\"struct lurk::public_parameters::PtrEvaluation\">PtrEvaluation</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/uint/enum.UInt.html\" title=\"enum lurk::uint::UInt\">UInt</a>"],["impl&lt;'a, C&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/proof/nova/enum.Proof.html\" title=\"enum lurk::proof::nova::Proof\">Proof</a>&lt;'a, C&gt;<span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/coprocessor/trait.Coprocessor.html\" title=\"trait lurk::coprocessor::Coprocessor\">Coprocessor</a>&lt;<a class=\"type\" href=\"lurk/proof/nova/type.S1.html\" title=\"type lurk::proof::nova::S1\">S1</a>&gt;,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Cert.html\" title=\"struct lurk::public_parameters::Cert\">Cert</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/public_parameters/enum.LurkCont.html\" title=\"enum lurk::public_parameters::LurkCont\">LurkCont</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/tag/enum.Op1.html\" title=\"enum lurk::tag::Op1\">Op1</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/public_parameters/enum.ReductionCount.html\" title=\"enum lurk::public_parameters::ReductionCount\">ReductionCount</a>"],["impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Commitment.html\" title=\"struct lurk::public_parameters::Commitment\">Commitment</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.Opening.html\" title=\"struct lurk::public_parameters::Opening\">Opening</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.CommittedExpression.html\" title=\"struct lurk::public_parameters::CommittedExpression\">CommittedExpression</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a> + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</span>"],["impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/eval/lang/struct.DummyCoprocessor.html\" title=\"struct lurk::eval::lang::DummyCoprocessor\">DummyCoprocessor</a>&lt;F&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/sym/enum.Sym.html\" title=\"enum lurk::sym::Sym\">Sym</a>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.OpeningRequest.html\" title=\"struct lurk::public_parameters::OpeningRequest\">OpeningRequest</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/scalar_store/struct.ScalarThunk.html\" title=\"struct lurk::scalar_store::ScalarThunk\">ScalarThunk</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.LurkScalarBytes.html\" title=\"struct lurk::public_parameters::LurkScalarBytes\">LurkScalarBytes</a>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/scalar_store/enum.ScalarContinuation.html\" title=\"enum lurk::scalar_store::ScalarContinuation\">ScalarContinuation</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/public_parameters/struct.VerificationResult.html\" title=\"struct lurk::public_parameters::VerificationResult\">VerificationResult</a>"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/public_parameters/enum.Claim.html\" title=\"enum lurk::public_parameters::Claim\">Claim</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>,</span>"],["impl&lt;F: <a class=\"trait\" href=\"lurk/field/trait.LurkField.html\" title=\"trait lurk::field::LurkField\">LurkField</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"lurk/field/struct.FWrap.html\" title=\"struct lurk::field::FWrap\">FWrap</a>&lt;F&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.160/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"lurk/eval/enum.Status.html\" title=\"enum lurk::eval::Status\">Status</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()