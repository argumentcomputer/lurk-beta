;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call 0x3636a3820b53c834ce46a2d608c3b732681ccbc343b5154862f11f989d1a41e5 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input/output expressions of the proof.

!(inspect "Nova_Pallas_10_2f90a649f3a2a7861fdf6499309edc0c8e72b61ff3f40f2a11bd027749df4b04")

;; Or the full proof claim

!(inspect-full "Nova_Pallas_10_2f90a649f3a2a7861fdf6499309edc0c8e72b61ff3f40f2a11bd027749df4b04")

;; Finally, and most importantly, we can verify the proof.

!(verify "Nova_Pallas_10_2f90a649f3a2a7861fdf6499309edc0c8e72b61ff3f40f2a11bd027749df4b04")
