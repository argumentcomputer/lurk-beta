;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call 0x178453ec28175e52c42a6467520df4a1322dd03e06abb3dfc829425ac590e48c 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input expression that was proved.

!(proof-in-expr "aeaaztyfm7bd3zry22nwpqxa3b5tvanwdn3jtpd7lqy64ycjjn3ydgefq")

;; And also the output expression.

!(proof-out-expr "aeaaztyfm7bd3zry22nwpqxa3b5tvanwdn3jtpd7lqy64ycjjn3ydgefq")

;; We can also see exactly what we claim to have proved.

!(proof-claim "aeaaztyfm7bd3zry22nwpqxa3b5tvanwdn3jtpd7lqy64ycjjn3ydgefq")

;; Finally, and most importantly, we can verify the proof.

!(verify "aeaaztyfm7bd3zry22nwpqxa3b5tvanwdn3jtpd7lqy64ycjjn3ydgefq")
