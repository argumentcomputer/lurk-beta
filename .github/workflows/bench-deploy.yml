name: Deploy GPU benchmarks on GH Pages
on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  benchmark:
    name: Bench and deploy
    runs-on: gpu-bench-a6000
    env:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITITES: compute,utility
      EC_GPU_FRAMEWORK: cuda
    steps:
      # Install deps
      - uses: actions-rs/toolchain@v1
      #- uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@just

      # Set up GPU
      # Check we have access to the machine's Nvidia drivers
      - run: nvidia-smi
      # The `compute`/`sm` number corresponds to the Nvidia GPU architecture
      # In this case, the self-hosted machine uses the Ampere architecture, but we want this to be configurable
      # See https://arnon.dk/matching-sm-architectures-arch-and-gencode-for-various-nvidia-cards/
      - name: Set env for CUDA compute
        run: echo "CUDA_ARCH=$(nvidia-smi --query-gpu=compute_cap --format=csv,noheader | sed 's/\.//g')" >> $GITHUB_ENV
      - name: set env for EC_GPU
        run: echo 'EC_GPU_CUDA_NVCC_ARGS=--fatbin --gpu-architecture=sm_${{ env.CUDA_ARCH }} --generate-code=arch=compute_${{ env.CUDA_ARCH }},code=sm_${{ env.CUDA_ARCH }}' >> $GITHUB_ENV
      - run: echo "${{ env.EC_GPU_CUDA_NVCC_ARGS}}"
      # Check that CUDA is installed with a driver-compatible version
      # This must also be compatible with the GPU architecture, see above link
      - run: nvcc --version

      # Run benchmarks and deploy
      - name: Get old benchmarks
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - run: mkdir -p target; cp -r gh-pages/benchmarks/criterion target;
      - name: Install criterion
        run: cargo install cargo-criterion
      - name: Run benchmarks
        run: just --dotenv-filename bench.env deploy-bench
      - name: Deploy latest benchmark report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/criterion
          destination_dir: benchmarks/criterion
      - name: Move benchmark json to history
        run: mkdir history; cp Cargo.lock ${{ github.sha }}.json history/
      - name: Deploy benchmark history
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: history/
          destination_dir: benchmarks/history
          keep_files: true
